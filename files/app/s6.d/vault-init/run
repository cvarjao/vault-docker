#!/bin/bash

echo "Waiting for service -- ${VAULT_ADDR}/v1/sys/init (Sleeping 2s) ..."
while ! curl -s -k -I -m 5 "${VAULT_ADDR}/v1/sys/ini" | grep 'HTTP/1.1 '; do echo "Waiting for service -- ${VAULT_ADDR}/v1/sys/init (Sleeping 2s) ..."; sleep 2; done

echo "Service is up"
IS_INITIALIZED="$(curl -k -s -m 5 "${VAULT_ADDR}/v1/sys/ini" | jq '.initialized')"
if [ "$IS_INITIALIZED" != 'true' ]; then
  echo 'Initializing vault'
  /app/vault/bin/vault init -address=${VAULT_ADDR} | tee /tmp/vault.init.keys
else
  echo 'Vault is already initialized'
fi

echo  'Unsealing vault:'
KEY1="$(grep 'Key 1:' /tmp/vault.init.keys | cut -c8-)"
KEY2="$(grep 'Key 2:' /tmp/vault.init.keys | cut -c8-)"
KEY3="$(grep 'Key 3:' /tmp/vault.init.keys | cut -c8-)"

echo  'Key1:'
/app/vault/bin/vault unseal -address=${VAULT_ADDR} $KEY1
echo  'Key2:'
/app/vault/bin/vault unseal -address=${VAULT_ADDR} $KEY2
echo  'Key3:'
/app/vault/bin/vault unseal -address=${VAULT_ADDR} $KEY3

grep 'Initial Root Token:' /tmp/vault.init.keys | cut -c21- > /tmp/vault.root.token

export VAULT_TOKEN="$(cat /tmp/vault.root.token)"
echo "Root Token:${VAULT_TOKEN}"

export VAULT_TOKEN="$(/app/vault/bin/vault token-create -format=json | jq --raw-output '.auth.client_token')"
echo "Client Token:${VAULT_TOKEN}"

echo 'Writing ...'
/app/vault/bin/vault write secret/hello value=world
echo 'Reading (table)...'
/app/vault/bin/vault read secret/hello
echo 'Reading (json) ...'
/app/vault/bin/vault read -format=json secret/hello
echo 'Deleting ...'
/app/vault/bin/vault delete secret/hello

echo 'Finished vault-init'
